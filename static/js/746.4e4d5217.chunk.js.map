{"version":3,"file":"static/js/746.4e4d5217.chunk.js","mappings":"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","sources":["components/LoginForm/fields.js","components/LoginForm/initialState.js","webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/pages/LoginPages/LoginPage.module.css?c0e1","pages/LoginPages/LoginPages.jsx","webpack://react-homework-template/./src/shared/components/Button/Button.module.css?4d6c","shared/components/Button/Button.jsx","webpack://react-homework-template/./src/shared/components/TextField/TextField.module.css?2d5d","shared/components/TextField/TextField.jsx","shared/hook/useForm.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'Email',\n    placeholder: 'User email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'Password',\n    placeholder: 'User password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__gPEx5\",\"field\":\"LoginForm_field__QNh-K\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from 'shared/components/TextField/TextField';\nimport useForm from 'shared/hook/useForm';\nimport fields from './fields';\nimport initialState from './initialState';\nimport Button from 'shared/components/Button/Button';\nimport style from './LoginForm.module.css';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { email, password } = state;\n\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <TextField\n        className={style.field}\n        value={email}\n        handleChange={handleChange}\n        {...fields.email}\n      />{' '}\n      <TextField\n        className={style.field}\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button className={style.btn}>Login</Button>\n    </form>\n  );\n};\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginPage_container__xrm9q\",\"pageTitle\":\"LoginPage_pageTitle__kIatM\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { login } from '../../redux/users/users-operations';\nimport LoginForm from 'components/LoginForm/LoginForm';\nimport style from './LoginPage.module.css';\nimport { isUserLogin } from 'redux/users/users-selectors';\n\nconst LoginPage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const dispatch = useDispatch();\n\n  const handleLogin = data => dispatch(login(data));\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <div className={style.container}>\n      <h2 className={style.pageTitle}>Enter your login please</h2>\n      <LoginForm onSubmit={handleLogin} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__urlvE\"};","import style from './Button.module.css';\n\nconst Button = ({ children, type='submit' }) => {\n  return <button type={type} className={style.button}>{children}</button>;\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"TextField_wrapper__OQN5w\",\"field\":\"TextField_field__f880x\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport style from './TextField.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div className={style.wrapper}>\n      <label htmlFor={id}>\n        {label}</label>\n           <input \n        className={style.field}\n        id={id}\n        onChange={handleChange}\n        {...props}\n        type=\"text\"\n      /> \n    </div>\n  );\n};\n\nexport default TextField;\n","import { useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { isUserError } from 'redux/users/users-selectors';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n  \n  const isError = useSelector(isUserError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n    if (isError) {\n      setState(state);\n    }\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["email","type","name","required","label","placeholder","password","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","style","TextField","value","fields","Button","isLogin","useSelector","isUserLogin","dispatch","useDispatch","to","data","login","children","props","id","useMemo","nanoid","htmlFor","onChange","useState","setState","useCallback","target","prevState","isError","isUserError","e","preventDefault","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}